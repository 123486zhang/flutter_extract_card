def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

//签名文件
//def keystorePropertiesFile = rootProject.file("./fantasy.jks")
//def keystoreProperties = new Properties()
//keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

apply plugin: 'com.android.application'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
apply plugin: 'android-junk-code'

android {
    compileSdkVersion 30

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        applicationId "com.fantasy.simulate"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName

        multiDexEnabled true

        if ("${formal}" == 'true') {
            manifestPlaceholders = ["baseUrl": "${baseUrlRelease}"]
        } else {
            manifestPlaceholders = ["baseUrl": "${baseUrlDebug}"]
        }
    }

    signingConfigs {
        release {
            storeFile file("./fantasy.jks")
            storePassword "wangzhuo"
            keyAlias "graphic"
            keyPassword "wangzhuo"
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            signingConfig signingConfigs.release
        }
        release {
            minifyEnabled true
            useProguard true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

flutter {
    source '../..'
}

repositories {
    flatDir {
        dirs 'libs'   // aar目录
    }
}

androidJunkCode {
    variantConfig {
        release {
            packageBase = "cn.fantasy.earth.ui"
            packageCount = 35
            activityCountPerPackage = 3
            excludeActivityJavaFile = false
            otherCountPerPackage = 50
            methodCountPerClass = 20
            resPrefix = "junk_"
            drawableCount = 250
            stringCount = 250
        }
    }
}


dependencies {
    implementation "androidx.appcompat:appcompat:1.0.0"

    implementation "androidx.multidex:multidex:2.0.0"
    implementation 'com.alibaba:fastjson:1.1.70.android'

    implementation 'org.jetbrains:annotations:15.0'
//    implementation 'com.tencent.mm.opensdk:wechat-sdk-android-without-mta:6.6.5'
    implementation 'com.yanzhenjie:permission:2.0.3'
    implementation 'io.reactivex:rxjava:1.3.0'
    implementation 'io.reactivex:rxandroid:1.2.1'

    implementation 'com.jayfeng:lesscode-core:2.4.2'

}
